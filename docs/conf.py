# pylint: skip-file
# Copyright 2024 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.insert(0, os.path.abspath('..'))

# -- Project information -----------------------------------------------------

project = 'TORAX'
copyright = '2024, The TORAX Authors.'
author = 'The TORAX authors'

# The short X.Y version
version = 'v1.0.0'
# The full version, including alpha/beta/rc tags
release = ''
github_base_url = f'https://github.com/google-deepmind/torax/tree/{version}'

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '2.1'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
sys.path.append(os.path.abspath('sphinxext'))
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.autosummary',
    'sphinx.ext.intersphinx',
    'sphinx.ext.mathjax',
    'sphinx.ext.napoleon',
    'sphinx.ext.viewcode',
    'matplotlib.sphinxext.plot_directive',
    'sphinx_autodoc_typehints',
    'sphinx_remove_toctrees',
    'sphinx_copybutton',
    'sphinx_design'
]

intersphinx_mapping = {
    'python': ('https://docs.python.org/3/', None),
    'numpy': ('https://numpy.org/doc/stable/', None),
    'scipy': ('https://docs.scipy.org/doc/scipy/reference/', None),
}

suppress_warnings = [
    'ref.citation',  # Many duplicated citations in numpy/scipy docstrings.
    'ref.footnote',  # Many unreferenced footnotes in numpy/scipy docstrings
    'misc.highlighting_failure',  # https://github.com/ipython/ipython/issues/14142
    'autosectionlabel.*',  # Many duplicate heading titles that we want to keep.
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
source_suffix = ['.rst', 'md']

# The main toctree document.
main_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    # Sometimes sphinx reads its own outputs as inputs!
    'build/html',
    'README.md',
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


autosummary_generate = True
napolean_use_rtype = False

# mathjax_config = {
#     'TeX': {'equationNumbers': {'autoNumber': 'AMS', 'useLabelIds': True}},
# }

# Additional files needed for generating LaTeX/PDF output:
# latex_additional_files = ['references.bib']

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

enable_logo = True
if enable_logo:
  # The name of an image file (relative to this directory) to place at the top
  # of the sidebar.
  html_logo = 'images/torax_logo_cropped.png'

  html_favicon = 'images/favicon.png'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = []

html_css_files = [
    'style.css',
]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'TORAXdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (main_doc, 'TORAX.tex', 'TORAX Documentation',
     'The TORAX authors', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (main_doc, 'torax', 'TORAX Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (main_doc, 'TORAX', 'TORAX Documentation',
     author, 'TORAX', 'Differentiable tokamak core simulator.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# Tell sphinx-autodoc-typehints to generate stub parameter annotations including
# types, even if the parameters aren't explicitly documented.
always_document_param_types = True


# Tell sphinx autodoc how to render type aliases.
autodoc_type_aliases = {
    'ArrayLike': 'ArrayLike',
    'DTypeLike': 'DTypeLike',
}


# Remove auto-generated API docs from sidebars. They take too long to build.
remove_from_toctrees = ['_autosummary/*']

# Various github links with dynamic version from "version"

rst_epilog = f"""
.. |default_plot_config.py| replace:: `default_plot_config.py <default_plot_config_target_>`_
.. _default_plot_config_target: {github_base_url}/torax/plotting/configs/default_plot_config.py

.. |run_simulation_main.py| replace:: `run_simulation_main.py <run_simulation_main_target_>`_
.. _run_simulation_main_target: {github_base_url}/torax/run_simulation_main.py

.. |torax/examples/| replace:: `torax/examples/ <torax_examples_dir_target_>`_
.. _torax_examples_dir_target: {github_base_url}/torax/examples/

.. |basic_config.py| replace:: `basic_config.py <basic_config_target_>`_
.. _basic_config_target: {github_base_url}/torax/examples/basic_config.py

.. |torax/tutorials/| replace:: `torax/tutorials/ <torax_tutorials_dir_target_>`_
.. _torax_tutorials_dir_target: {github_base_url}/torax/tutorials/

.. |TimeStepCalculator| replace:: `TimeStepCalculator <TimeStepCalculator_target_>`_
.. _TimeStepCalculator_target: {github_base_url}/torax/_src/time_step_calculator/time_step_calculator.py

.. |Solver| replace:: `Solver <Solver_target_>`_
.. _Solver_target: {github_base_url}/torax/_src/solver/solver.py

.. |SourceModels| replace:: `SourceModels <SourceModels_target_>`_
.. _SourceModels_target: {github_base_url}/torax/_src/sources/source_models.py

.. |TransportModel| replace:: `TransportModel <TransportModel_target_>`_
.. _TransportModel_target: {github_base_url}/torax/_src/transport_model/transport_model.py

.. |PedestalModel| replace:: `PedestalModel <PedestalModel_target_>`_
.. _PedestalModel_target: {github_base_url}/torax/_src/pedestal_model/pedestal_model.py

.. |state| replace:: `state <torax_src_state_target_>`_
.. _torax_src_state_target: {github_base_url}/torax/_src/state.py

.. |ToraxSimState| replace:: `ToraxSimState <torax_src_state_ToraxSimState_target_>`_
.. _torax_src_state_ToraxSimState_target: {github_base_url}/torax/_src/state.py

.. |geometry| replace:: `geometry <geometry_package_target_>`_
.. _geometry_package_target: {github_base_url}/torax/_src/geometry/

.. |torax.Geometry| replace:: `torax.Geometry <Geometry_target_>`_
.. _Geometry_target: {github_base_url}/torax/_src/geometry/geometry.py

.. |GeometryProvider| replace:: `GeometryProvider <GeometryProvider_target_>`_
.. _GeometryProvider_target: {github_base_url}/torax/_src/geometry/geometry_provider.py

.. |StandardGeometryProvider| replace:: `StandardGeometryProvider <StandardGeometryProvider_target_>`_
.. _StandardGeometryProvider_target: {github_base_url}/torax/_src/geometry/standard_geometry.py

.. |config.runtime_params_slice| replace:: `config.runtime_params_slice <torax_src_config_runtime_params_slice_target_>`_
.. _torax_src_config_runtime_params_slice_target: {github_base_url}/torax/_src/config/runtime_params_slice.py

.. |solver| replace:: `solver <torax_src_solver_target_>`_
.. _torax_src_solver_target: {github_base_url}/torax/_src/solver

.. |sources| replace:: `sources <torax_src_sources_target_>`_
.. _torax_src_sources_target: {github_base_url}/torax/_src/sources

.. |QLKNN| replace:: `QLKNN <QLKNN_target_>`_
.. _QLKNN_target: {github_base_url}/torax/_src/transport_model/qlknn_transport_model.py

.. |QuaLiKiz| replace:: `QuaLiKiz <qualikiz_target_>`_
.. _qualikiz_target: {github_base_url}/torax/_src/transport_model/qualikiz_transport_model.py

.. |transport_model| replace:: `transport_model <torax_src_transport_model_target_>`_
.. _torax_src_transport_model_target: {github_base_url}/torax/_src/transport_model

.. |pedestal_model| replace:: `pedestal_model <torax_src_pedestal_model_target_>`_
.. _torax_src_pedestal_model_target: {github_base_url}/torax/_src/pedestal_model

.. |time_step_calculator| replace:: `time_step_calculator <torax_src_time_step_calculator_target_>`_
.. _torax_src_time_step_calculator_target: {github_base_url}/torax/_src/time_step_calculator

.. |output_tools| replace:: `output_tools <torax_src_output_tools_target_>`_
.. _torax_src_output_tools_target: {github_base_url}/torax/_src/output_tools

.. |orchestration.step_function.py| replace:: `orchestration.step_function.py <step_function_py_target_>`_
.. _step_function_py_target: {github_base_url}/torax/_src/orchestration/step_function.py

.. |orchestration.initial_state.py| replace:: `orchestration.initial_state.py <initial_state_py_target_>`_
.. _initial_state_py_target: {github_base_url}/torax/_src/orchestration/initial_state.py

.. |torax.run_simulation| replace:: `torax.run_simulation.py <torax_run_simulation_target_>`_
.. _torax_run_simulation_target: {github_base_url}/torax/_src/orchestration/run_simulation.py

.. |torax.run_simulation()| replace:: `torax.run_simulation() <torax_run_simulation_func_target_>`_
.. _torax_run_simulation_func_target: {github_base_url}/torax/_src/orchestration/run_simulation.py

.. |torax.ToraxConfig| replace:: `torax.ToraxConfig <torax_ToraxConfig_target_>`_
.. _torax_ToraxConfig_target: {github_base_url}/torax/_src/torax_pydantic/model_config.py

.. |torax.StateHistory| replace:: `torax.StateHistory <torax_StateHistory_target_>`_
.. _torax_StateHistory_target: {github_base_url}/torax/_src/output_tools/output.py


.. |mhd| replace:: `mhd <torax_src_mhd_target_>`_
.. _torax_src_mhd_target: {github_base_url}/torax/_src/mhd

.. |neoclassical| replace:: `neoclassical <torax_src_neoclassical_target_>`_
.. _torax_src_neoclassical_target: {github_base_url}/torax/_src/neoclassical
"""